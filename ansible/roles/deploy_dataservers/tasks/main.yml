---

  - name: Ensure log files are owned by {{ app_user }}
    file: path={{ search_app_log_base_path }} owner={{ app_user }} group=etsin mode=740 recurse=yes

  - block:

      - name: Pull latest data from search app project repo branch {{ search_app_github_repo_branch }}
        git: repo={{ search_app_github_repo }} dest={{ search_app_base_path }} version={{ search_app_github_repo_branch }}
        become_user: "{{ app_user }}"
        ignore_errors: yes

    when: deployment_environment_id in ['local_development', 'test', 'stable', 'demo']

  # Copy app_config only in envs which are not deployed via Travis CI
  - block:

      - include_role: name=app_config

    when: deployment_environment_id in ['local_development', 'staging', 'production']

  - block:

      - name: Copy deployment script to remote
        template: src=templates/update_etsin_finder_search_with_tags.sh dest=/tmp/update_etsin_finder_search_with_tags.sh owner={{ app_user }} mode=500

      - name: Fetch tags, checkout the tag {{ etsin_finder_search_tag }}
        shell: /tmp/update_etsin_finder_search_with_tags.sh {{ etsin_finder_search_tag }}
        register: shell_result
        become_user: "{{ app_user }}"

      - name: Print script output
        debug:
          var: shell_result.stdout_lines

    when: deployment_environment_id in ['staging', 'production']

  - name: Update search app python package requirements to their latest versions
    shell: pur --force --requirement {{ search_app_base_path }}/requirements.txt
    become_user: "{{ app_user }}"
    when: deployment_environment_id == 'local_development'

  - name: Install search app python package requirements
    pip: requirements={{ search_app_base_path }}/requirements.txt virtualenv={{ python_virtualenv_path }}
    become_user: "{{ app_user }}"

  - name: Delete search index
    shell: su - {{ app_user }} -c '{{ search_app_scripts_path }}/delete_index.sh'
    when: deployment_environment_id in ['test', 'stable', 'demo']

  - name: Create search index in case it does not exist already and load test data there
    shell: su - {{ app_user }} -c '{{ search_app_scripts_path }}/load_test_data_to_index.sh'
    when: deployment_environment_id in ['local_development', 'test', 'stable', 'demo']

  - name: Restart RabbitMQ consumer
    systemd:
      state: restarted
      name: rabbitmq-consumer
