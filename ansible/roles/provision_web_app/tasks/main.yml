---

  - include_role: name=app_config

  - include_role: name=saml_config

  - name: Create web app logging folder to {{ web_app_log_base_path }}
    file: path={{ web_app_log_base_path }} state=directory owner={{ app_user }} group=etsin mode=0755

  - name: Create folder {{ web_app_base_path }} for the web app
    file: path={{ web_app_base_path }} state=directory owner={{ app_user }} group=etsin mode=0755

  - name: Clone project repo from branch {{ web_app_github_repo_branch }} to {{ web_app_base_path }}
    git: repo={{ web_app_github_repo }} dest={{ web_app_base_path }} version={{ web_app_github_repo_branch }}
    become_user: "{{ app_user }}"
    ignore_errors: yes

  - name: Install latest pip version
    pip: name=pip state=latest virtualenv={{ python_virtualenv_path }}
    become_user: "{{ app_user }}"

  - name: Install web app python package requirements
    pip: requirements={{ web_app_base_path }}/requirements.txt virtualenv={{ python_virtualenv_path }}
    become_user: "{{ app_user }}"

  - name: Install web app python test package requirements
    pip: requirements={{ web_app_base_path }}/test_requirements.txt virtualenv={{ python_virtualenv_path }}
    become_user: "{{ app_user }}"
    when: deployment_environment_id not in ['demo', 'production']

  - include_role: name=gunicorn

  - name: Install NPM
    block:
      - name: Enable software collections
        shell: yum --setopt=tsflags=nodocs -y install centos-release-scl-rh
      - name: Install nodejs 12.x
        shell: yum --enablerepo=centos-sclo-rh-testing -y install rh-nodejs12
    when: deployment_environment_id in ['local_development', 'test', 'stable', 'demo', 'production']

  - name: Link npm to usr/local/bin
    block:
        - name: link node, npm, npx to /usr/local/bin/
          file:
            src: /opt/rh/rh-nodejs12/root/bin/{{ item }}
            dest: /usr/local/bin/{{ item }}
            state: link
          with_items:
          - node
          - npm
          - npx
        - name: link node to /usr/local/bin/nodejs
          file:
            src: /opt/rh/rh-nodejs12/root/bin/node
            dest: /usr/local/bin/nodejs
            state: link
    when: deployment_environment_id in ['test', 'stable', 'demo', 'production']

  - name: Link npm to usr/bin for local_development
    block:
        - name: link node, npm, npx to /usr/bin/
          file:
            src: /opt/rh/rh-nodejs12/root/bin/{{ item }}
            dest: /usr/bin/{{ item }}
            state: link
          with_items:
          - node
          - npm
          - npx
        - name: link node to /usr/bin/nodejs
          file:
            src: /opt/rh/rh-nodejs12/root/bin/node
            dest: /usr/bin/nodejs
            state: link
    when: deployment_environment_id in ['local_development']

  - include_role: name=frontend

  - debug:
      msg: "{{ deployment_environment_id }} web app environment successfully set up."
    when: deployment_environment_id != 'local_development'

  - block:

      # note - pur is never executed automatically during provisioning because changed apis
      # can break the app. run pur manually to update packages in requirements.txt
      - name: Install pur
        pip: name=pur state=latest virtualenv={{ python_virtualenv_path }}
        become_user: "{{ app_user }}"

      - debug:
          msg: "Local dev environment successfully set up. Run commands 'sudo su - {{ app_user }}' and 'runserver' to run the app."

    when: deployment_environment_id == 'local_development'
