---

  - include_role: name=app_config

  - name: Create app logging folder to {{ app_log_base_path }}
    file: path={{ app_log_base_path }} state=directory owner={{ app_user }} group=etsin mode=0755

  - include_role:
      name: ansible-elasticsearch
    vars:
      es_instance_name: "{{ elasticsearch_instance.node_name }}"
      es_version: "5.5.1"
      es_config: {
        node.name: "{{ elasticsearch_instance.node_name }}",
        cluster.name: "{{ elasticsearch_instance.cluster_name }}",
        node.data: "{{ elasticsearch_instance.is_data_node }}",
        node.master: "{{ elasticsearch_instance.is_master_node }}",
        http.cors.enabled : true,
        http.cors.allow-origin : "{{ elasticsearch_instance.allow_origin }}",
        http.cors.allow-methods : "OPTIONS, HEAD, GET, POST, PUT, DELETE",
        http.cors.allow-headers : "X-Requested-With,X-Auth-Token,Content-Type, Content-Length",
        network.host: [_local_, _site_]
      }

  - name: Copy reindexing related scripts to {{ etsin_reindexer_path }}
    copy: src={{ role_path }}/files/ dest={{ etsin_reindexer_path }} owner={{ app_user }} group=etsin mode=740

  - name: Install reindexing script dependencies
    pip: requirements={{ etsin_reindexer_path }}/requirements.txt virtualenv={{ python_virtualenv_path }}
    become_user: "{{ app_user }}"

  - name: Create empty search index
    shell: su - {{ app_user }} -c '{{ etsin_reindexer_path }}/scripts/create_empty_index_and_mapping.sh'

  - name: Create cronjob for running reindexing script that does not recreate the search index
    cron:
      name: "Reindex search index without recreating the search index"
      minute: "00"
      hour: "5"
      weekday: "1-6"
      job: "{{ etsin_reindexer_path }}/scripts/reindex_without_recreating_index.sh"
      state: present
      user: "{{ app_user }}"

  - name: Create cronjob for running reindexing script that recreates the search index
    cron:
      name: "Reindex search index by recreating the search index"
      minute: "00"
      hour: "5"
      weekday: "7"
      job: "{{ etsin_reindexer_path }}/scripts/reindex_by_recreating_index.sh"
      state: present
      user: "{{ app_user }}"

  - name: Copy RabbitMQ service file
    template: src=rabbitmq-consumer.service dest=/lib/systemd/system mode=0644 force=yes

  - name: Reload systemd
    systemd: daemon_reload=yes

  - name: Enable RabbitMQ service
    systemd:
      name: rabbitmq-consumer
      enabled: yes

  - name: Start RabbitMQ consumer
    systemd: state=started name=rabbitmq-consumer
