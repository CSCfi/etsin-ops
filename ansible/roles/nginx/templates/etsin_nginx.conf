user nginx;
worker_processes auto;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 768;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log on;
    access_log  /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    server_tokens       off;

    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    proxy_cookie_path / "/; HTTPOnly; Secure";

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    # `gzip` Settings
    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

    # server {
    #     # handle unknown domain names or Host header values
    #     listen 80 default_server;
    #     return 444;
    # }

    # server {
    #     # handle unknown domain names or Host header values
    #     listen 443 ssl http2 default_server;
    #     listen [::]:443 ssl http2 default_server;
    #     ssl_protocols TLSv1.1 TLSv1.2;
    #     ssl_prefer_server_ciphers on;
    #     ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    #     ssl_ecdh_curve secp384r1;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_tickets off;
    #     ssl_stapling on;
    #     ssl_stapling_verify on;
    #     ssl_certificate {{ ssl_certificates_path }}/{{ ssl_certificate_name }};
    #     ssl_certificate_key {{ ssl_certificates_path }}/{{ ssl_key_name }};
    #     ssl_dhparam {{ ssl_certificates_path }}/{{ nginx_dh_param_name }};
    #     return 444;
    # }

    server {

        # port 80 only redirects to https

        listen 80 default_server;
        server_name {{ server_domain_name }};
        return 301 https://{{ server_domain_name }}$request_uri;
        access_log on;
    }

    upstream elasticsearch {
        keepalive 15;
        server {{ dataserver_1_internal_ip | default('127.0.0.1') }}:{{ elasticsearch.port }} weight=3;
{% if dataserver_2_internal_ip is not undefined %}
        server {{ dataserver_2_internal_ip }}:{{ elasticsearch.port }};
{% endif %}
{% if dataserver_3_internal_ip is not undefined %}
        server {{ dataserver_3_internal_ip }}:{{ elasticsearch.port }};
{% endif %}
    }

    server {

        # https configuration

        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name {{ server_domain_name }};
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        ssl_certificate {{ ssl_certificates_path }}/{{ ssl_certificate_name }};
        ssl_certificate_key {{ ssl_certificates_path }}/{{ ssl_key_name }};
        ssl_dhparam {{ ssl_certificates_path }}/{{ nginx_dh_param_name }};

{% if deployment_environment_id not in ['production'] %}
        location =/robots.txt {
            include shared_headers.conf;
            include static_file_headers.conf;
            alias /etc/nginx/robots.txt;
        }
{% endif %}

        location /es/metax/dataset/_search {
            include shared_headers.conf;
            include elastic_headers.conf;
            proxy_pass http://elasticsearch/metax/dataset/_search;
            limit_except GET HEAD POST {
                auth_basic 'Credentials required';
                auth_basic_user_file /etc/nginx/es_auth;
            }
        }

        location /es/ {
            include shared_headers.conf;
            include elastic_headers.conf;
            proxy_pass http://elasticsearch/;
            limit_except GET HEAD {
                auth_basic 'Credentials required';
                auth_basic_user_file /etc/nginx/es_auth;
            }
        }

        location ~ ^/(sso|slo|saml_metadata|acs|sls) {
            include shared_headers.conf;
            add_header Cache-Control "no-store" always;

            rewrite ^/(.*)$ /$1 break;
            proxy_pass {{ nginx_gunicorn_proxy_pass }};

            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /build/ {
            include shared_headers.conf;
            include static_file_headers.conf;
            alias {{ nginx_static_root }};
        }

        location /api/dl {
            # separate block for dl api to not include content-disposition header
            include shared_headers.conf;
            add_header Cache-Control "no-store" always;
            add_header Content-Security-Policy "default-src 'self'";
            proxy_pass {{ nginx_gunicorn_proxy_pass }};
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_max_temp_file_size 0;
        }

        location /api/ {
            include shared_headers.conf;
            include api_response_headers.conf;
            proxy_pass {{ nginx_gunicorn_proxy_pass }};
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            include shared_headers.conf;
            proxy_pass {{ nginx_gunicorn_proxy_pass }};
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
