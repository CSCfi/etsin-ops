---

- name: NGINX | Install NGINX
  shell: yum -y install nginx warn=false

- name: NGINX | Replace NGINX conf file
  template: src=templates/etsin_nginx.conf dest=/etc/nginx/nginx.conf

- name: NGINX | Copy shared_headers.conf
  template: src=templates/shared_headers.conf dest=/etc/nginx/shared_headers.conf

- name: NGINX | Copy shared_ssl_configurations.conf
  template: src=templates/shared_ssl_configurations.conf dest=/etc/nginx/shared_ssl_configurations.conf

- name: NGINX | Copy api_response_headers.conf
  template: src=templates/api_response_headers.conf dest=/etc/nginx/api_response_headers.conf

- name: NGINX | Copy static_file_headers.conf
  template: src=templates/static_file_headers.conf dest=/etc/nginx/static_file_headers.conf

- name: NGINX | Copy elastic_headers.conf
  template: src=templates/elastic_headers.conf dest=/etc/nginx/elastic_headers.conf

- include_role: name=certificates

- name: NGINX | Generate Diffie-Hellman PFS (Perfect Forward Secrecy) group
  command: openssl dhparam -out {{ ssl_certificates_path }}/{{ nginx_dh_param_name }} 2048 creates={{ ssl_certificates_path }}/{{ nginx_dh_param_name }}

- name: NGINX | Install passlib
  pip: name=passlib state=latest executable=pip3

- name: NGINX | Create basic auth file
  htpasswd:
    path: /etc/nginx/es_auth
    name: "{{ item.username }}"
    password: "{{ item.password }}"
    owner: root
    group: nginx
    state: present
    mode: 0640
  with_items: "{{ nginx_es_credentials }}"

- name: NGINX | Restart NGINX
  service: name=nginx enabled=yes state=restarted
